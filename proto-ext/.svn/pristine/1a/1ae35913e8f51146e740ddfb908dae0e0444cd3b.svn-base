;; http://localhost/tmp/webproto/?radius=9&numDevices=500&stepSize=1&program=(def%20uid2rgb%20(uid%20f)%20%0A%20%20%20%20%20(let*%20((r%20(mod%20uid%20f))%20%0A%20%20%20%20%20%20%20%20%20%20%20%20(g%20(-%20(mod%20uid%20(pow%20f%202))%20r))%20%0A%20%20%20%20%20%20%20%20%20%20%20%20(b%20(-%20(mod%20uid%20(pow%20f%203))%20(%2B%20r%20g))))%20%0A%20%20%20%20%20%20%20(rgb%20(tup%20(%2F%20r%20f)%20(%2F%20g%20(pow%20f%202))%20(%2F%20b%20(pow%20f%203))))))%20%0A%20%0A(def%20voronoi%20(src%20showedge)%20%0A%20%20%20%20%20(let*%20((closest-src%20(broadcast%20src%20(mid)))%20%0A%20%20%20%20%20%20%20%20%20%20%20%20(edge%20(any-hood%20(not%20(%3D%20(nbr%20closest-src)%20closest-src))))%20%0A%20%20%20%20%20%20%20%20%20%20%20%20(vertex%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20(and%20edge%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(let%20((max-nbr%20(max-hood%20(if%20(not%20(%3D%20closest-src%20(nbr%20closest-src)))%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(nbr%20closest-src)%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20-1)))%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(min-nbr%20(min-hood%20(if%20(not%20(%3D%20closest-src%20(nbr%20closest-src)))%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(nbr%20closest-src)%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(inf)))))%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(not%20(%3D%20max-nbr%20min-nbr))))))%20%0A%20%20%20%20%20%20%20(if%20(and%20edge%20showedge)%20%0A%20%20%20%20%20%20%20%20%20(if%20vertex%20%0A%20%20%20%20%20%20%20%20%20%20%20(rgb%20(tup%201%200%200))%20%0A%20%20%20%20%20%20%20%20%20%20%20(rgb%20(tup%200%200%200.5)))%20%0A%20%20%20%20%20%20%20%20%20(uid2rgb%20closest-src%2010))%20%0A%20%20%20%20%20%20%20(tup%20closest-src%20edge)))%20%0A%20%0A(voronoi%20(sense%201)%201)%20

(def uid2rgb (uid f)
     (let* ((r (mod uid f))
            (g (- (mod uid (pow f 2)) r))
            (b (- (mod uid (pow f 3)) (+ r g))))
       (rgb (tup (/ r f) (/ g (pow f 2)) (/ b (pow f 3))))))

(def voronoi (src showedge)
     (let* ((closest-src (broadcast src (mid)))
            (edge (any-hood (not (= (nbr closest-src) closest-src))))
            (vertex 
              (and edge 
                   (let ((max-nbr (max-hood (if (not (= closest-src (nbr closest-src)))
                                              (nbr closest-src)
                                              -1)))
                         (min-nbr (min-hood (if (not (= closest-src (nbr closest-src)))
                                              (nbr closest-src)
                                              (inf)))))
                     (not (= max-nbr min-nbr))))))
       (if (and edge showedge)
         (if vertex
           (rgb (tup 1 0 0))
           (rgb (tup 0 0 0.5)))
         (uid2rgb closest-src 10))
       (tup closest-src edge)))

(voronoi (sense 1) 1)

;; proto -n 1000 -s 0.1 -r 8 -l -led-blend "(voronoi (sense 1) 1)"
;; proto -n 1000 -s 0.1 -r 7 -l -led-blend "(voronoi (random-subset 0.01) (broadcast (sense 1) (sense 2)))"
;; For 10K, use -r 1.7

;; proto -n 10000 -s 0.5 -T -r 1.7 -l -led-blend "(voronoi (once (random-subset 0.002)) 1)" -DD hexgrid -rad 0.2
