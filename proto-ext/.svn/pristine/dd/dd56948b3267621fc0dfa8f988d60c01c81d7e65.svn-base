// a place to put some complex, composed programs

//test: $(PROTO) -n 100 -DD grid -dim 50 50 -r 6 -dump-after 20 -NDall -Dvalue -stop-after 50.5 "(red (gradient (= (coord) (tup 20 -25))))"
test: $(PROTO) -n 100 -DD grid -dim 50 50 -r 6 -headless -dump-after 100 -NDall -Dvalue -stop-after 100.5 "(red (gradient (and (= (1st (coord)) 20) (= (2nd (coord)) -25))))"
= 10 3 90
= 91 3 0
= 1 3 45
= 100 3 45

test: $(PROTO) -path "$(DEMOS)" -n 500 -r 15 -sv -l -m -s 0.5 -w "(let ((g (gradient (once (in-circle (tup 25 25 0) 10))))) (mov (if (once (in-circle (tup -25 -25 0) 10)) (flock (vmul 0.1 (nav-grad (once (in-circle (tup 25 25 0) 10)) (once (< (rnd 0 1) 0.1))))) (vmul 0.1 (disperse)))))" -headless -dump-after 300 -NDall -Dvalue -stop-after 300.5
// no actual test: just seeing if it runs that long
= 1 0 0

test: $(PROTO) -path "$(DEMOS)" -n 500 -r 15 -sv -l -m -w -s 0.5 "(track-demo)" -headless -dump-after 100 -NDall -Dvalue -stop-after 100.5
// no actual test: just seeing if it runs that long
= 1 0 0 

test: $(PROTO) -path "$(DEMOS)" -v "(stupidfn 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)" -headless -NDall -Dvalue -dump-after 2 -stop-after 2.5 -n 10
= 1 3 120

test: $(PROTO) -path "$(DEMOS)" -DD grid "(wire (= (mid) 0) (= (mid) 98) (and (> (mid) 47) (< (mid) 52))" -headless -NDall -Dvalue -s 1 -sv -r 20 -dump-after 100 -stop-after 100
= 1 3 12.00
= 1 4 11.11
= 11 3 12.00
= 11 4 11.11
= 21 3 12.00
= 21 4 0
= 30 3 12
= 30 4 0
= 39 3 12
= 39 4 0
= 48 3 12
= 48 4 11.11
= 58 3 12
= 58 4 11.11
= 68 3 12
= 68 4 11.11
= 78 3 12
= 78 4 11.11
= 88 3 12
= 88 4 11.11
= 98 3 0
= 98 4 11.11
= 99 3 0
= 99 4 0
= 100 3 0
= 100 4 0

test: $(PROTO) -path "$(DEMOS)" -DD grid "(wire (or (= (mid) 0) (= (mid) 4)) (= (mid) 99) (= (mid) 52))" -headless -NDall -Dvalue -s 1 -sv -r 5 -3d -dim 15 15 15 -dump-after 100 -stop-after 100
= 5 3 3.75
= 5 4 3
= 5 5 0
= 10 3 0
= 10 4 0
= 10 5 0
= 20 3 0
= 20 4 0
= 20 5 0
= 27 3 3.75
= 27 4 3
= 27 5 0
= 35 3 3.75
= 35 4 3
= 35 5 0
= 57 3 3.75
= 57 4 0
= 57 5 3
= 65 3 3.75
= 65 4 3
= 65 5 0
= 83 3 0
= 83 4 3
= 83 5 3
= 89 3 0
= 89 4 3
= 89 5 3
= 95 3 0
= 95 4 3
= 95 5 0






